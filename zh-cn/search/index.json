[{"content":"Java Database Connectivity 概念 JAVA数据库连接技术\n主要功能 1.与数据库建立连接、执行SQL语句、处理结果\n相关对象功能 DriverManager: 管理JDBC驱动\nConnection: 负责数据库连接并传送数据任务\nStatement: 负责执行SQL语句\nResultSet: 负责保存结果（结果集）\n操作步骤 加载JDBC驱动 1 Class.forName(........); 建立与数据库连接 1 2 Connection con=DriverManager.getConnection(URL,数据库用户名,密码); \u0026#34;jdbc:mysql://localhost:3306/world?useUnicode=true\u0026amp;characterEncoding=utf-8\u0026amp;useSSL=false\u0026amp;serverTimezone = GMT\u0026#34;,\u0026#34;xxxx\u0026#34;,\u0026#34;xxxx\u0026#34; 发送SQL语句得到结果集 1 2 Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(String sql); 释放资源 1 2 3 rs.close(); stmt.close(); con.close(); Statement常用方法 1 2 3 4 ResultSet executeQuery(String sql)//执行sql查询并获得结果集 int executeUpdate(String sql)//可以执行插入、删除、更新等操作，返回的是执行操作影响的行数 boolean execute(String sql)//执行任意sql语句，获得一个布尔值，表示是否返回ResultSet void close()//关闭 ResultSet 1 2 3 4 5 6 7 8 9 boolean next()//将游标从当前位置向下移动一行 boolean previous()//游标从当前位置向上移动一行 void close()//关闭ResultSet 对象 int getInt(int colIndex)//以int形式获取结果集当前行指定列号值 int getInt(String colLabel)//以int形式获取结果集当前行指定列名值 float getFloat(int colIndex)//以float形式获取结果集当前行指定列号值 float getFloat(String colLabel)//以float形式获取结果集当前行指定列名值 String getString(int colIndex)//以String 形式获取结果集当前行指定列号值 String getString(String colLabel)//以String形式获取结果集当前行指定列名值 PreparedStatement 优点 1.提高代码的可读性与可维护性\n2.提高sql语句的执行性能\n3.提高了安全性\n举例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public static void main(String[] args) { Connection conn = null; PreparedStatement pstmt = null; conn = DriverManager.getConnection( \u0026#34;jdbc:mysql://localhost:3306/epet\u0026#34;, \u0026#34;epetadmin\u0026#34;, \u0026#34;0000\u0026#34;); // 3、更新狗狗信息到数据库 String sql=\u0026#34;update dog set health=?,love=? where id=?\u0026#34;; pstmt = conn.prepareStatement(sql); pstmt.setInt(1, 80); pstmt.setInt(2, 15); pstmt.setInt(3, 1); pstmt.executeUpdate(); pstmt.setInt(1, 90); pstmt.setInt(2, 10); pstmt.setInt(3, 2); pstmt.executeUpdate(); logger.info(\u0026#34;成功更新狗狗信息！\u0026#34;); } catch (SQLException e) {\tlogger.error(e); } finally { // 4、关闭Statement和数据库连接 try { if (null != pstmt) { pstmt.close(); } if (null != conn) { conn.close(); } } catch (SQLException e) { logger.error(e); } } } Dao实现连接数据库 根据上文可以看出，连接数据库的关键是要获取Connection对象，且数据库的连接数量存在限制，所以我们在一次连接中做完要做的业务后要关闭连接。为了提高代码的简洁性，复用性。我们要将获取connnection和关闭相关资源封装。\n实现IBaseDao接口 ","date":"2025-02-19T00:00:00Z","permalink":"https://rxlxr11.github.io/zh-cn/p/dao%E7%9A%84%E5%88%9B%E5%BB%BA/","title":"Dao的创建"},{"content":"Java Database Connectivity 概念 JAVA数据库连接技术\n主要功能 1.与数据库建立连接、执行SQL语句、处理结果\n相关对象功能 DriverManager: 管理JDBC驱动\nConnection: 负责数据库连接并传送数据任务\nStatement: 负责执行SQL语句\nResultSet: 负责保存结果（结果集）\n操作步骤 加载JDBC驱动 1 Class.forName(........); 建立与数据库连接 1 2 Connection con=DriverManager.getConnection(URL,数据库用户名,密码); \u0026#34;jdbc:mysql://localhost:3306/world?useUnicode=true\u0026amp;characterEncoding=utf-8\u0026amp;useSSL=false\u0026amp;serverTimezone = GMT\u0026#34;,\u0026#34;xxxx\u0026#34;,\u0026#34;xxxx\u0026#34; 发送SQL语句得到结果集 1 2 Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(String sql); 释放资源 1 2 3 rs.close(); stmt.close(); con.close(); Statement常用方法 1 2 3 4 ResultSet executeQuery(String sql)//执行sql查询并获得结果集 int executeUpdate(String sql)//可以执行插入、删除、更新等操作，返回的是执行操作影响的行数 boolean execute(String sql)//执行任意sql语句，获得一个布尔值，表示是否返回ResultSet void close()//关闭 ResultSet 1 2 3 4 5 6 7 8 9 boolean next()//将游标从当前位置向下移动一行 boolean previous()//游标从当前位置向上移动一行 void close()//关闭ResultSet 对象 int getInt(int colIndex)//以int形式获取结果集当前行指定列号值 int getInt(String colLabel)//以int形式获取结果集当前行指定列名值 float getFloat(int colIndex)//以float形式获取结果集当前行指定列号值 float getFloat(String colLabel)//以float形式获取结果集当前行指定列名值 String getString(int colIndex)//以String 形式获取结果集当前行指定列号值 String getString(String colLabel)//以String形式获取结果集当前行指定列名值 PreparedStatement 优点 1.提高代码的可读性与可维护性\n2.提高sql语句的执行性能\n3.提高了安全性\n举例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public static void main(String[] args) { Connection conn = null; PreparedStatement pstmt = null; conn = DriverManager.getConnection( \u0026#34;jdbc:mysql://localhost:3306/epet\u0026#34;, \u0026#34;epetadmin\u0026#34;, \u0026#34;0000\u0026#34;); // 3、更新狗狗信息到数据库 String sql=\u0026#34;update dog set health=?,love=? where id=?\u0026#34;; pstmt = conn.prepareStatement(sql); pstmt.setInt(1, 80); pstmt.setInt(2, 15); pstmt.setInt(3, 1); pstmt.executeUpdate(); pstmt.setInt(1, 90); pstmt.setInt(2, 10); pstmt.setInt(3, 2); pstmt.executeUpdate(); logger.info(\u0026#34;成功更新狗狗信息！\u0026#34;); } catch (SQLException e) {\tlogger.error(e); } finally { // 4、关闭Statement和数据库连接 try { if (null != pstmt) { pstmt.close(); } if (null != conn) { conn.close(); } } catch (SQLException e) { logger.error(e); } } } ","date":"2025-02-19T00:00:00Z","permalink":"https://rxlxr11.github.io/zh-cn/p/jdbc/","title":"JDBC"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://rxlxr11.github.io/helena-hertz-wWZzXlDpMog-unsplash.jpg","permalink":"https://rxlxr11.github.io/zh-cn/p/test-chinese/","title":"Chinese Test"}]